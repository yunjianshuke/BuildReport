@charset "UTF-8";
@import "common/var";
@import "mixins/button";
@import "mixins/mixins";
@import "mixins/utils";

@include b(button) {
  display: inline-block;
  line-height: 1;
  white-space: nowrap;
  cursor: pointer;
  background: var(--el-button-default-background-color);
  border: var(--el-border-base);
  border-color: var(--el-button-default-border-color);
  color: var(--el-button-default-font-color);
  -webkit-appearance: none;
  text-align: center;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  transition: 0.1s;
  font-weight: var(--el-button-font-weight);
  @include utils-user-select(none);
  & + & {
    margin-left: 10px;
  }

  @include button-size(
    var(--el-button-padding-vertical),
    var(--el-button-padding-horizontal),
    var(--el-button-font-size),
    var(--el-button-border-radius)
  );

  &:hover,
  &:focus {
    color: var(--el-color-primary);
    border-color: var(--el-color-primary-light-7);
    background-color: var(--el-color-primary-light-9);
  }

  &:active {
    color: color-mix(
      in srgb,
      var(--el-color-black) var(--el-button-active-shade-percent),
      var(--el-color-primary)
    );
    border-color: color-mix(
      in srgb,
      var(--el-color-black) var(--el-button-active-shade-percent),
      var(--el-color-primary)
    );
    outline: none;
  }

  &::-moz-focus-inner {
    border: 0;
  }

  & [class*="el-icon-"] {
    & + span {
      margin-left: 5px;
    }
  }

  @include when(plain) {
    &:hover,
    &:focus {
      background: var(--el-color-white);
      border-color: var(--el-color-primary);
      color: var(--el-color-primary);
    }

    &:active {
      background: var(--el-color-white);
      border-color: color-mix(
        in srgb,
        var(--el-color-black) var(--el-button-active-shade-percent),
        var(--el-color-primary)
      );
      color: color-mix(
        in srgb,
        var(--el-color-black) var(--el-button-active-shade-percent),
        var(--el-color-primary)
      );
      outline: none;
    }
  }

  @include when(active) {
    color: color-mix(
      in srgb,
      var(--el-color-black) var(--el-button-active-shade-percent),
      var(--el-color-primary)
    );
    border-color: color-mix(
      in srgb,
      var(--el-color-black) var(--el-button-active-shade-percent),
      var(--el-color-primary)
    );
  }

  @include when(disabled) {
    &,
    &:hover,
    &:focus {
      color: var(--el-button-disabled-font-color);
      cursor: not-allowed;
      background-image: none;
      background-color: var(--el-button-disabled-background-color);
      border-color: var(--el-button-disabled-border-color);
    }

    &.el-button--text {
      background-color: transparent;
    }

    &.is-plain {
      &,
      &:hover,
      &:focus {
        background-color: var(--el-color-white);
        border-color: var(--el-button-disabled-border-color);
        color: var(--el-button-disabled-font-color);
      }
    }
  }

  @include when(loading) {
    position: relative;
    pointer-events: none;

    &:before {
      pointer-events: none;
      content: "";
      position: absolute;
      left: -1px;
      top: -1px;
      right: -1px;
      bottom: -1px;
      border-radius: inherit;
      background-color: rgba(255, 255, 255, 0.35);
    }
  }

  @include when(round) {
    border-radius: 20px;
    padding: 12px 23px;
  }

  @include when(circle) {
    border-radius: 50%;
    padding: var(--el-button-padding-vertical);
  }

  @include m(primary) {
    @include button-variant(
      var(--el-button-primary-font-color),
      var(--el-button-primary-background-color),
      var(--el-button-primary-border-color)
    );
  }

  @include m(success) {
    @include button-variant(
      var(--el-button-success-font-color),
      var(--el-button-success-background-color),
      var(--el-button-success-border-color)
    );
  }

  @include m(warning) {
    @include button-variant(
      var(--el-button-warning-font-color),
      var(--el-button-warning-background-color),
      var(--el-button-warning-border-color)
    );
  }

  @include m(danger) {
    @include button-variant(
      var(--el-button-danger-font-color),
      var(--el-button-danger-background-color),
      var(--el-button-danger-border-color)
    );
  }

  @include m(info) {
    @include button-variant(
      var(--el-button-info-font-color),
      var(--el-button-info-background-color),
      var(--el-button-info-border-color)
    );
  }

  @include m(medium) {
    @include button-size(
      var(--el-button-medium-padding-vertical),
      var(--el-button-medium-padding-horizontal),
      var(--el-button-medium-font-size),
      var(--el-button-medium-border-radius)
    );
    @include when(circle) {
      padding: var(--el-button-medium-padding-vertical);
    }
  }

  @include m(small) {
    @include button-size(
      var(--el-button-small-padding-vertical),
      var(--el-button-small-padding-horizontal),
      var(--el-button-small-font-size),
      var(--el-button-small-border-radius)
    );
    @include when(circle) {
      padding: var(--el-button-small-padding-vertical);
    }
  }

  @include m(mini) {
    @include button-size(
      var(--el-button-mini-padding-vertical),
      var(--el-button-mini-padding-horizontal),
      var(--el-button-mini-font-size),
      var(--el-button-mini-border-radius)
    );
    @include when(circle) {
      padding: var(--el-button-mini-padding-vertical);
    }
  }

  @include m(text) {
    border-color: transparent;
    color: var(--el-color-primary);
    background: transparent;
    padding-left: 0;
    padding-right: 0;

    &:hover,
    &:focus {
      color: color-mix(
        in srgb,
        var(--el-color-white) var(--el-button-hover-tint-percent),
        var(--el-color-primary)
      );
      border-color: transparent;
      background-color: transparent;
    }

    &:active {
      color: color-mix(
        in srgb,
        var(--el-color-black) var(--el-button-active-shade-percent),
        var(--el-color-primary)
      );
      border-color: transparent;
      background-color: transparent;
    }

    &.is-disabled,
    &.is-disabled:hover,
    &.is-disabled:focus {
      border-color: transparent;
    }
  }
}

@include b(button-group) {
  @include utils-clearfix;
  display: inline-block;
  vertical-align: middle;

  & > .el-button {
    float: left;
    position: relative;
    & + .el-button {
      margin-left: 0;
    }
    &.is-disabled {
      z-index: 1;
    }
    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    &:first-child:last-child {
      border-top-right-radius: var(--el-button-border-radius);
      border-bottom-right-radius: var(--el-button-border-radius);
      border-top-left-radius: var(--el-button-border-radius);
      border-bottom-left-radius: var(--el-button-border-radius);

      &.is-round {
        border-radius: 20px;
      }

      &.is-circle {
        border-radius: 50%;
      }
    }
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    &:not(:last-child) {
      margin-right: -1px;
    }

    &:not(.is-disabled) {
      &:hover,
      &:focus,
      &:active {
        z-index: 1;
      }
    }

    @include when(active) {
      z-index: 1;
    }
  }

  & > .el-dropdown {
    & > .el-button {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left-color: color-mix(
        in srgb,
        var(--el-color-white) 50%,
        transparent
      );
    }
  }

  @each $type in (primary, success, warning, danger, info) {
    .el-button--#{$type} {
      &:first-child {
        border-right-color: rgba(var(--el-color-white), 0.5);
      }
      &:last-child {
        border-left-color: color-mix(
          in srgb,
          var(--el-color-white) 50%,
          transparent
        );
      }
      &:not(:first-child):not(:last-child) {
        border-left-color: color-mix(
          in srgb,
          var(--el-color-white) 50%,
          transparent
        );
        border-right-color: rgba(var(--el-color-white), 0.5);
      }
    }
  }
}
